import json
import re

def txt_to_json(txt_filepath, json_filepath):
    """Converts Genshin character data from TXT to JSON."""

    try:
        with open(txt_filepath, 'r', encoding='utf-8') as txt_file:  # Handle potential encoding issues
            txt_content = txt_file.read()
    except FileNotFoundError:
        print(f"Error: File '{txt_filepath}' not found.")
        return

    characters = []
    current_character = {}

    # Regular expression to split characters (improves robustness)
    character_blocks = re.split(r'\n\s*Character:\s*', txt_content)[1:]  # Split by "Character:"

    for block in character_blocks:
        lines = block.strip().split('\n')
        for line in lines:
            line = line.strip()

            if line.startswith("Character:"):
                current_character["name"] = line.split(":")[1].strip()
            elif line.startswith("Talent priority:"):
                current_character["talent_priority"] = [p.strip() for p in line.split(":")[1].split(",")]
            elif line.startswith("Best artifact set:"):
               current_character["artifact_set"] = line.split(":")[1].strip()
            elif line.startswith("Elemental skill:") or line.startswith("Elemental Burst:") or line.startswith("Passive talent"):
                ability_name = line.split(":")[0].strip()
                ability_description = ":".join(line.split(":")[1:]).strip() # Handles colons in description
                if "abilities" not in current_character:
                    current_character["abilities"] = []
                current_character["abilities"].append({"name": ability_name, "description": ability_description})
            elif line: # General description/lore/tips
                if "description" not in current_character:
                    current_character["description"] = ""
                current_character["description"] += line + "\n" # Append to handle multi-line descriptions

        if current_character:
            characters.append(current_character)
            current_character = {}  # Reset for the next character

    # Add default artifact set if none is found
    for char in characters:
      if "artifact_set" not in char:
        char["artifact_set"] = "N/A" # or an empty string ""

    try:
        with open(json_filepath, 'w', encoding='utf-8') as json_file:
            json.dump({"characters": characters}, json_file, indent=4, ensure_ascii=False) # indent for readability, handle non-ASCII
        print(f"JSON data written to '{json_filepath}'")
    except Exception as e:
        print(f"Error writing JSON file: {e}")


# Example usage:
txt_file = "test.txt"  # Replace with your TXT file path
json_file = "genshin_characters.json" # Replace with your desired JSON file path
txt_to_json(txt_file, json_file)